apply plugin: 'org.sonarqube'
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    namespace "com.vijay.jsonwizard"
    compileSdk 34
    buildToolsVersion '34.0.0'

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 24
        versionName "1.10.6"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    configurations.all {
/*        resolutionStrategy.force "com.android.support:support-v4:$supportLibVersion"
        resolutionStrategy.force "com.android.support:appcompat-v7:$supportLibVersion"
        resolutionStrategy.force "com.android.support:recyclerview-v7:$supportLibVersion"
        resolutionStrategy.force "com.android.support:cardview-v7:$supportLibVersion"
        resolutionStrategy.force "com.android.support:support-annotations:$supportLibVersion"*/
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'com.yarolegovich:discrete-scrollview:1.5.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'org.sufficientlysecure:html-textview:4.0'

    implementation('com.github.ganfra:material-spinner:2.0.0') {
        exclude group: 'com.nineoldandroids', module: 'library'
    }

    implementation 'com.google.firebase:firebase-ml-vision:24.1.0'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.1.2'
    implementation 'androidx.camera:camera-camera2:1.3.1'
    implementation 'androidx.camera:camera-core:1.3.1'

    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.1.0'

    implementation 'com.gu.android:toolargetool:0.3.0'

    implementation 'com.google.android.material:material:1.11.0'

    implementation 'com.google.code.gson:gson:2.10'
}
sonarqube {
    properties {
        property "sonar.projectName", "Android JSON FORM Wizard"
        property "sonar.projectKey", "es.indaba.android-json-form-wizard"
        property "sonar.java.test.binaries", "$projectDir/build/intermediates/classes/androidTest/debug"
    }
}

tasks.register('sourceJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                //from components.findByName('release')
                artifact sourceJar // optional sources
                artifact bundleReleaseAar
                pom.withXml {
                    final dependenciesNode = asNode().appendNode('dependencies')

                    ext.addDependency = { Dependency dep, String scope ->
                        if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                            return // ignore invalid dependencies

                        final dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dep.group)
                        dependencyNode.appendNode('artifactId', dep.name)
                        dependencyNode.appendNode('version', dep.version)
                        dependencyNode.appendNode('scope', scope)

                        if (!dep.transitive) {
                            // If this dependency is transitive, we should force exclude all its dependencies them from the POM
                            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                            exclusionNode.appendNode('groupId', '*')
                            exclusionNode.appendNode('artifactId', '*')
                        } else if (!dep.properties.excludeRules.empty) {
                            // Otherwise add specified exclude rules
                            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                            dep.properties.excludeRules.each { ExcludeRule rule ->
                                exclusionNode.appendNode('groupId', rule.group ?: '*')
                                exclusionNode.appendNode('artifactId', rule.module ?: '*')
                            }
                        }
                    }
                    // List all "api" dependencies (for new Gradle) as "compile" dependencies
                    configurations.api.getDependencies().each { dep -> addDependency(dep, "compile") }
                    // List all "implementation" dependencies (for new Gradle) as "runtime" dependencies
                    configurations.implementation.getDependencies().each { dep -> addDependency(dep, "runtime") }
                }

            }
        }
    }
}

